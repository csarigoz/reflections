What happens when you initialize a repository? Why do you need to do it?
	It creates a hidden folder named ".git" and waits for the first commit. I need it for starting version control for my project.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	Staging area is the state right before committing. Working directory might have several files but staging area includes only the ones that are added. 
	I think it's valueable in situations where you have some unfinished work on some files but need to commit the finished ones as needed.
	Git command for seeing the staged changes:
	git diff --staged

How can you use the staging area to make sure you have one commit per logical
change?
	By adding one logical change to the staging area and ommitting unfinished and/or unrelated work about that logical change

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Branches can be especially useful when trying some experimental feature or creating an alternative version of the current project. 
	By this way the master branch would not be effected from the bugs or other unwanted changes. Master code would still be working for that matter.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?