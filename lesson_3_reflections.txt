When would you want to use a remote repository rather than keeping all your work
local?

    When working on a project with collaboration. For example: open sourcing a project, or collaborating on a private repository with my team.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because Someone else could be making changes on the repository that might cause conflicts with my local commits.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks: Useful for making changes on a repo that I don't have permission to collaborate. And it's also a good thing by letting the owners of the repo that their repo is forked and someone else is using it.
    Clones: Useful for making changes on a repo locally. If I'm to clone a repo and share my changes publicly, I would first fork the repo and then clone the forked one into my local computer. Ih this way, I'd be able to try new things and push them when I'm 100% sure they work.
    Branches: Useful for working on new features in a repo that's functional. I'd not want to merge these branches until I'm sure that they don't effect functionality of the master branch.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It makes us updated about the remote changes and so that we can have the change to look at those changes before trying to merge our local commits.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
